from database.db import conectarBanco
import oracledb
def criar_tabela():
      conn = conectarBanco()
      cursor = conn.cursor()
      cursor.execute("""
        BEGIN
            EXECUTE IMMEDIATE 'DROP TABLE usuarios cascade constraints';
        EXCEPTION
            WHEN OTHERS THEN
                NULL; 
        END;
      """)

    # Criação da tabela
      cursor.execute("""
        CREATE TABLE usuarios (
            idUsuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            nome VARCHAR2(255) NOT NULL,
            email varchar(255) not null
        )
      """)
      conn.commit()
      conn.close()
# criar_tabela()

def inserir_usuario(nome, email):
    conn = conectarBanco()
    if conn:
        try:
            cursor = conn.cursor()
            cursor.execute(
                "INSERT INTO usuarios (nome, email) VALUES (:nome, :email)",
                nome=nome,
                email=email,
            )
            conn.commit()
            print(f"Usuario {nome}, inserido com sucesso")
        except oracledb.Error as e:
            error, = e.args
            print(f"Erro ao inserir usuario: {e}")
        finally:
            conn.close()
# inserir_usuario("Teste", "teste@teste.com")



def listar_usuarios():
    conn = conectarBanco()
    if conn is None:
        return [] # Retorna lista vazia se a conexão falhar
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios")
    usuarios = cursor.fetchall()
    conn.close()
    return usuarios

# iten = listar_usuarios()
# for i in iten:
#     print(iten)
    

def excluir_usuario(user_id):
    conn = conectarBanco()
    if conn:
        try:
            cursor = conn.cursor()
            cursor.execute("DELETE FROM usuarios WHERE idUsuario = :idUsuario", idUsuario=user_id)
            conn.commit()
            if cursor.rowcount > 0:
              print("Usuario excluido com sucesso!")
            else:
              print("Nenhum usuario excluido")

        except oracledb.Error as e:
            error, = e.args
            print(f"Erro ao excluir usuario: {e}")
        finally:
            conn.close()
    print("usuario excluido com sucesso!")

# excluir_usuario(3)

def buscar_usuario_por_id(user_id):
    conn = conectarBanco()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios WHERE idUsuario = :idUsuario", idUsuario=user_id)
    usuario = cursor.fetchone()
    conn.close()
    return usuario


# print(buscar_usuario_por_id(2))


def atualizar_usuario(user_id, nome, email):
    conn = conectarBanco()
    cursor = conn.cursor()
    cursor.execute("UPDATE usuarios "
    "SET nome = :nome, email = :email "
    "WHERE idUsuario = :idUsuario", nome=nome, email=email, idUsuario=user_id)
    conn.commit()
    conn.close()

# atualizar_usuario(2, "jonas", "jonasGamer@gmail.com")

