import cx_Oracle

# from database.db import conectar_Banco, 
from database.db import *
# Importe a função conectar_Banco do seu arquivo db.py

def criar_tabela():
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None: # teste de verificação de conexão
      return # Aborta a função se a conexão falhar.
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE usuarios (
            id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            nome VARCHAR2(255) NOT NULL,
            email VARCHAR2(255) NOT NULL
        )
    """)
    conn.commit()
    cursor.close()
    conn.close()

def inserir_usuario(nome, email):
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None:
      return
    cursor = conn.cursor()
    cursor.execute("INSERT INTO usuarios (nome, email) VALUES (:nome, :email)", nome=nome, email=email)
    conn.commit()
    cursor.close()
    conn.close()

def listar_usuarios():
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None:
        return [] # Retorna lista vazia se a conexão falhar
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios")
    usuarios = cursor.fetchall()
    cursor.close()
    conn.close()
    return usuarios

def excluir_usuario(user_id):
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None:
      return
    cursor = conn.cursor()
    cursor.execute("DELETE FROM usuarios WHERE id = :user_id", user_id=user_id)
    conn.commit()
    cursor.close()
    conn.close()

def buscar_usuario_por_id(user_id):
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None:
      return None
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios WHERE id = :user_id", user_id=user_id)
    usuario = cursor.fetchone()
    cursor.close()
    conn.close()
    return usuario

def atualizar_usuario(user_id, nome, email):
    conn = conectar_Banco(usuario_db, senha_db, host_db, porta_db, sid)
    if conn is None:
      return
    cursor = conn.cursor()
    cursor.execute("UPDATE usuarios SET nome = :nome, email = :email WHERE id = :user_id", nome=nome, email=email, user_id=user_id)
    conn.commit()
    cursor.close()
    conn.close()





#teste
# if conexao:
#     # Exemplo de consulta
#     sql = "SELECT * FROM ENGENHEIRO"
#     resultados = executar_consulta(conexao, sql)

#     if resultados:
#         for linha in resultados:
#             print(linha)